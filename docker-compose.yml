version: '3'

services:

    parser:
        build:
            context: ./parser
            dockerfile: parser.Dockerfile
        container_name: parser
        command: sh -c './wait-for rabbitmq:5672 -- python3 main.py'
        restart: always
        depends_on:
            - rabbitmq
        networks:
            - basenet
        environment:
            - IMAGE_QUEUE
            - IMAGE_ROUTING_KEY
            - IMAGE_EXCHANGE
            - RABBITMQ_HOST
            - RABBITMQ_PORT
    
    app:
        build:
            context: ./api
            dockerfile: api.Dockerfile
        container_name: app
        command: ["./docker-entrypoint.sh" ]
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: any
                delay: 1s
                window: 60s
        healthcheck: 
            test: wget --no-verbose --tries=1 --spider http://app:8000 || exit 1 
            interval: 60s
            timeout: 3s
            start_period: 30s
            retries: 3
        networks:
            - basenet
        ports:
            - '8000:8000'
        # depends_on:
        #     - postgresdb
        # environment:
        #     - POSTGRES_DATABASE
        #     - POSTGRES_USERNAME
        #     - POSTGRES_PASSWORD
        #     - POSTGRES_HOST
        #     - POSTGRES_PORT

    rabbitmq:
        hostname: my-rabbit
        container_name: rabbit
        image: rabbitmq:3-alpine
        restart: always
        networks:
            - basenet
        ports:
            - '5672:5672'
            - '15672:15672'
        volumes:
            - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
              
    celery:
        build:
            context: ./worker
            dockerfile: celery.Dockerfile
        container_name: worker
        restart: always
        networks:
            - basenet
        depends_on:
            - rabbitmq
        environment:
            - RABBITMQ_HOST
            - RABBITMQ_PORT
            - IMAGE_EXCHANGE
            - IMAGE_QUEUE
            - IMAGE_ROUTING_KEY
            - RABBITMQ_USERNAME=guest
            - RABBITMQ_PASSWORD=guest
        
    # postgresdb:
    #     container_name: postgres
    #     image: postgres:15-alpine
    #     networks:
    #         - basenet
    #     volumes: 
    #         - sample_db:/var/lib/postgresql/data
    #     ports:
    #         - '5435:5432'
    #     environment:
    #         - POSTGRES_USERNAME
    #         - POSTGRES_PASSWORD
    #         - POSTGRES_DATABASE


# volumes:
#     sample_db:

networks:
    basenet:
        driver: bridge
